from ape import accounts, project
from typing import List, Optional
import json
import os
import time
import struct

# BASE_TOKEN = "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
# cTOKEN = "0xc3d688B66703497DAA19211EEdff47f25384cdc3"

# COMP_USD = "0xdbd020CAeF83eFd542f4De03e3cF0C28A4428bd5"
# WANTED_TOKEN_USD = "0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6"


# ## totalSupply()
# CONTRACT_ADDRESS_0 = cTOKEN
# ## 0x18160ddd (selector from totalSupply()
# CHECKDATA_0 = "0x18160ddd"
# STRATEGYY_OFFSET_0 = 0

# ## totalBorrow()
# CONTRACT_ADDRESS_1 = cTOKEN
# ## 0x8285ef40 (selector from totalBorrow()) 
# CHECKDATA_1 = "0x8285ef40"
# STRATEGYY_OFFSET_1 = 0

# ## supplyPerSecondInterestRateBase() Rslop 0
# CONTRACT_ADDRESS_2 = cTOKEN
# ## 0x94920cca (selector from supplyPerSecondInterestRateBase() ) 
# CHECKDATA_2 = "0x94920cca"
# STRATEGYY_OFFSET_2 = 0

# ## supplyPerSecondInterestRateSlopeLow() Rslop 1
# CONTRACT_ADDRESS_3 = cTOKEN
# ## 0x5a94b8d1 (selector from supplyPerSecondInterestRateSlopeLow() ) 
# CHECKDATA_3 = "0x5a94b8d1"
# STRATEGYY_OFFSET_3 = 0

# ## supplyPerSecondInterestRateSlopeHigh() Rslop 2
# CONTRACT_ADDRESS_4 = cTOKEN
# ## 0x804de71f (selector from supplyPerSecondInterestRateSlopeHigh() ) 
# CHECKDATA_4 = "0x804de71f"
# STRATEGYY_OFFSET_4 = 0

# ## supplyKink() Uo
# CONTRACT_ADDRESS_5 = cTOKEN
# ## 0xa5b4ff79 (selector from supplyKink() ) 
# CHECKDATA_5 = "0xa5b4ff79"
# STRATEGYY_OFFSET_5 = 0

# ##baseTrackingSupplySpeed()
# CONTRACT_ADDRESS_6 = cTOKEN
# ## 0x189bb2f1 (selector from baseTrackingSupplySpeed() ) 
# CHECKDATA_6 = "0x189bb2f1"
# STRATEGYY_OFFSET_6 = 0

# ## baseScale()
# CONTRACT_ADDRESS_7 = cTOKEN
# ## 0x44c1e5eb (selector from baseScale() ) 
# CHECKDATA_7 = "0x44c1e5eb"
# STRATEGYY_OFFSET_7 = 0

# ## PriceFEED

# ##latestAnswer()
# CONTRACT_ADDRESS_8 = COMP_USD
# ## 0x50d25bcd (selector from latestAnswer() ) 
# CHECKDATA_8 = "0x50d25bcd"
# STRATEGYY_OFFSET_8 = 0

# ##decimals()
# CONTRACT_ADDRESS_9 = COMP_USD
# ## 0x313ce567 (selector from decimals() ) 
# CHECKDATA_9 = "0x313ce567"
# STRATEGYY_OFFSET_9 = 0

# ##latestAnswer()
# CONTRACT_ADDRESS_10 = WANTED_TOKEN_USD
# ## 0x50d25bcd (selector from latestAnswer() ) 
# CHECKDATA_10 = "0x50d25bcd"
# STRATEGYY_OFFSET_10 = 0

# ##decimals()
# CONTRACT_ADDRESS_11 = WANTED_TOKEN_USD
# ## 0x313ce567 (selector from decimals() ) 
# CHECKDATA_11 = "0x313ce567"
# STRATEGYY_OFFSET_11 = 0

# ##decimals()
# CONTRACT_ADDRESS_12 = BASE_TOKEN
# ## 0x313ce567 (selector from decimals() ) 
# CHECKDATA_12 = "0x313ce567"
# STRATEGYY_OFFSET_12 = 0



# # contracts to get data from
# STRATEGY_CONTRACTS = [CONTRACT_ADDRESS_0, CONTRACT_ADDRESS_1, CONTRACT_ADDRESS_2, CONTRACT_ADDRESS_3, CONTRACT_ADDRESS_4, CONTRACT_ADDRESS_5, CONTRACT_ADDRESS_6, CONTRACT_ADDRESS_7, CONTRACT_ADDRESS_8, CONTRACT_ADDRESS_9, CONTRACT_ADDRESS_10, CONTRACT_ADDRESS_11, CONTRACT_ADDRESS_12]

# # checkdata (selector + neccessary args bytes32)
# STRATEGYY_CHECKDATA = [CHECKDATA_0, CHECKDATA_1, CHECKDATA_2, CHECKDATA_3, CHECKDATA_4, CHECKDATA_5, CHECKDATA_6, CHECKDATA_7, CHECKDATA_8, CHECKDATA_9, CHECKDATA_10, CHECKDATA_11, CHECKDATA_12]

# # offset, which args we need from the data received from the call, 0 by default
# STRATEGYY_OFFSET = [STRATEGYY_OFFSET_0, STRATEGYY_OFFSET_1, STRATEGYY_OFFSET_2, STRATEGYY_OFFSET_3, STRATEGYY_OFFSET_4, STRATEGYY_OFFSET_5, STRATEGYY_OFFSET_6, STRATEGYY_OFFSET_7, STRATEGYY_OFFSET_8, STRATEGYY_OFFSET_9, STRATEGYY_OFFSET_10, STRATEGYY_OFFSET_11, STRATEGYY_OFFSET_12]


# STRATEGYY_CALCULATION = [0, 0, 5, 1, 1000000000000020000, 2, 10001, 10000, 3, 5, 3, 2, 10003, 1000000000000020000, 3, 10004, 2, 0, 10002, 5, 1, 10006, 4, 2, 10007, 1000000000000020000, 3, 10008, 10005, 0,
# 10009, 31556000, 2, 8, 6, 2, 12, 11, 2, 31556000, 1000000000000020000, 2, 10010, 10011, 2, 10013, 10012, 2, 9, 7, 2, 10000, 10, 2, 10015, 10016, 2, 10014, 10017, 3, 10010, 10018, 0, 10019, 1000020000, 2,
# 0, 0, 5, 1, 1000000000000020000, 2, 10001, 10000, 3, 10002, 3, 2, 10003, 1000000000000020000, 3, 10004, 2, 0, 10005, 31556000, 2, 8, 6, 2, 12, 11, 2, 31556000, 1000000000000020000, 2,
# 10007, 10008, 2, 10010, 10009, 2, 9, 7, 2, 10000, 10, 2, 10012, 10013, 2, 10011, 10014, 3, 10006, 10015, 0, 10016, 1000020000, 2]
# CALCULATION_CONDITION = [0, 0, 5, 1, 1000000000000020000, 2, 10001, 10000, 3, 10002, 5, 22, 18]


# def main():
#     f = open("./scripts/config_mainnet.json")
#     config_dict = json.load(f)
#     f.close()
    
#     account = accounts.load(config_dict["account"])
#     contract = project.testStrategyData.at(config_dict["data_strat_test"])
    
#     contract.getStrategiesData(STRATEGY_CONTRACTS, STRATEGYY_CHECKDATA, STRATEGYY_OFFSET,sender=account)
#     data = []
#     for i in range(13):
#         result = contract.dataSaved(i)
#         data.append(result)
#     print(data)
 
# ## Compound V3 : [168482027497752, 76823946090320, 0, 1030568239, 12683916793, 800000000000000000, 0, 1000000, 3606000000, 8, 99994853, 8, 6]

# WANTED_TOKEN = "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
# cTOKEN = "0x39AA39c021dfbaE8faC545936693aC917d5E7563"
# INTEREST_RATE_cTOKEN = "0xD8EC56013EA119E7181d231E5048f90fBbe753c0"
# Comptroller = "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"

# COMP_USD = "0xdbd020CAeF83eFd542f4De03e3cF0C28A4428bd5"
# WANTED_TOKEN_USD = "0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6"


# COMPOUND_CONTRACT_ADDRESS_0 = cTOKEN
# COMPOUND_CHECKDATA_0 = "0x3b1d21a2"
# COMPOUND_STRATEGYY_OFFSET_0 = 0
# COMPOUND_CONTRACT_ADDRESS_1 = cTOKEN
# COMPOUND_CHECKDATA_1 = "0x47bd3718"
# COMPOUND_STRATEGYY_OFFSET_1 = 0
# COMPOUND_CONTRACT_ADDRESS_2 = cTOKEN
# COMPOUND_CHECKDATA_2 = "0x8f840ddd"
# COMPOUND_STRATEGYY_OFFSET_2 = 0
# COMPOUND_CONTRACT_ADDRESS_3 = cTOKEN
# COMPOUND_CHECKDATA_3 = "0x173b9904"
# COMPOUND_STRATEGYY_OFFSET_3 = 0
# COMPOUND_CONTRACT_ADDRESS_4 = INTEREST_RATE_cTOKEN
# COMPOUND_CHECKDATA_4 = "0xfd2da339"
# COMPOUND_STRATEGYY_OFFSET_4 = 0
# COMPOUND_CONTRACT_ADDRESS_5 = INTEREST_RATE_cTOKEN
# COMPOUND_CHECKDATA_5 = "0x8726bb89"
# COMPOUND_STRATEGYY_OFFSET_5 = 0
# COMPOUND_CONTRACT_ADDRESS_6 = INTEREST_RATE_cTOKEN
# COMPOUND_CHECKDATA_6 = "0xb9f9850a"
# COMPOUND_STRATEGYY_OFFSET_6 = 0
# COMPOUND_CONTRACT_ADDRESS_7 = INTEREST_RATE_cTOKEN
# COMPOUND_CHECKDATA_7 = "0xf14039de"
# COMPOUND_STRATEGYY_OFFSET_7 = 0
# COMPOUND_CONTRACT_ADDRESS_8 = INTEREST_RATE_cTOKEN
# COMPOUND_CHECKDATA_8 = "0xa385fb96"
# COMPOUND_STRATEGYY_OFFSET_8 = 0
# COMPOUND_CONTRACT_ADDRESS_9 = Comptroller
# COMPOUND_CHECKDATA_9 = "0x6aa875b500000000000000000000000039AA39c021dfbaE8faC545936693aC917d5E7563"
# COMPOUND_STRATEGYY_OFFSET_9 = 0
# COMPOUND_CONTRACT_ADDRESS_10 = COMP_USD
# COMPOUND_CHECKDATA_10 = "0x50d25bcd"
# COMPOUND_STRATEGYY_OFFSET_10 = 0
# COMPOUND_CONTRACT_ADDRESS_11 = COMP_USD
# COMPOUND_CHECKDATA_11 = "0x313ce567"
# COMPOUND_STRATEGYY_OFFSET_11 = 0
# COMPOUND_CONTRACT_ADDRESS_12 = WANTED_TOKEN_USD
# COMPOUND_CHECKDATA_12 = "0x50d25bcd"
# COMPOUND_STRATEGYY_OFFSET_12 = 0
# COMPOUND_CONTRACT_ADDRESS_13 = WANTED_TOKEN_USD
# COMPOUND_CHECKDATA_13 = "0x313ce567"
# COMPOUND_STRATEGYY_OFFSET_13 = 0
# COMPOUND_CONTRACT_ADDRESS_14 = WANTED_TOKEN
# COMPOUND_CHECKDATA_14 = "0x313ce567"
# COMPOUND_STRATEGYY_OFFSET_14 = 0

# COMPOUND_STRATEGY_CONTRACTS = [COMPOUND_CONTRACT_ADDRESS_0, COMPOUND_CONTRACT_ADDRESS_1, COMPOUND_CONTRACT_ADDRESS_2, COMPOUND_CONTRACT_ADDRESS_3, COMPOUND_CONTRACT_ADDRESS_4, COMPOUND_CONTRACT_ADDRESS_5, COMPOUND_CONTRACT_ADDRESS_6, COMPOUND_CONTRACT_ADDRESS_7, COMPOUND_CONTRACT_ADDRESS_8, COMPOUND_CONTRACT_ADDRESS_9, COMPOUND_CONTRACT_ADDRESS_10, COMPOUND_CONTRACT_ADDRESS_11, COMPOUND_CONTRACT_ADDRESS_12, COMPOUND_CONTRACT_ADDRESS_13, COMPOUND_CONTRACT_ADDRESS_14]
# COMPOUND_STRATEGYY_CHECKDATA = [COMPOUND_CHECKDATA_0, COMPOUND_CHECKDATA_1, COMPOUND_CHECKDATA_2, COMPOUND_CHECKDATA_3, COMPOUND_CHECKDATA_4, COMPOUND_CHECKDATA_5, COMPOUND_CHECKDATA_6, COMPOUND_CHECKDATA_7, COMPOUND_CHECKDATA_8, COMPOUND_CHECKDATA_9, COMPOUND_CHECKDATA_10, COMPOUND_CHECKDATA_11, COMPOUND_CHECKDATA_12, COMPOUND_CHECKDATA_13, COMPOUND_CHECKDATA_14]
# COMPOUND_STRATEGYY_OFFSET = [COMPOUND_STRATEGYY_OFFSET_0, COMPOUND_STRATEGYY_OFFSET_1, COMPOUND_STRATEGYY_OFFSET_2, COMPOUND_STRATEGYY_OFFSET_3, COMPOUND_STRATEGYY_OFFSET_4, COMPOUND_STRATEGYY_OFFSET_5, COMPOUND_STRATEGYY_OFFSET_6, COMPOUND_STRATEGYY_OFFSET_7, COMPOUND_STRATEGYY_OFFSET_8, COMPOUND_STRATEGYY_OFFSET_9, COMPOUND_STRATEGYY_OFFSET_10, COMPOUND_STRATEGYY_OFFSET_11, COMPOUND_STRATEGYY_OFFSET_12, COMPOUND_STRATEGYY_OFFSET_13, COMPOUND_STRATEGYY_OFFSET_14]
# COMPOUND_STRATEGYY_CALCULATION = [0, 0, 5, 10000, 1, 0, 10001, 2, 1, 1, 1000000000000020000, 2, 10003, 10002, 3, 4, 5, 2, 10005, 1000000000000020000, 3, 10006, 7, 0, 10004, 4, 1, 10008, 6, 2, 10009, 1000000000000020000, 3, 10010, 10007, 0, 
# 1000000000000020000, 3, 1, 10011, 10012, 2, 10013, 1000000000000020000, 3, 10014, 10004, 2, 10015, 1000000000000020000, 3, 10016, 8, 2, 9, 8, 2, 20010, 14, 4, 10018, 10019, 2, 10020, 10002, 3, 10021, 10, 2, 20010, 11, 4, 10022, 10023, 3, 20010, 13, 4, 10024, 10025, 2,
# 10026, 12, 3, 10027, 10017, 0 , 10028, 1000020000, 2, 0, 0, 5, 10000, 1, 0, 10001, 2, 1, 1, 1000000000000020000, 2, 10003, 10002, 3, 10004, 5, 2, 10005, 1000000000000020000, 3,
# 10006, 7, 0, 1000000000000020000, 3, 1, 10008, 10007, 2, 10009, 1000000000000020000, 3, 10010, 10004, 2, 10011, 1000000000000020000, 3, 10012, 8, 2, 9, 8, 2, 20010, 14, 4, 10014, 10015, 2,
# 10016, 10002, 3, 10017, 10, 2, 20010, 11, 4, 10018, 10019, 3, 20010, 13, 4, 10020, 10021, 2, 10022, 12, 3, 10023, 10013, 0, 10024, 1000020000, 2]
# COMPOUND_CALCULATION_CONDITION = [0, 0, 5, 10000, 1, 0, 10001, 2, 1, 1, 1000000000000020000, 2, 10003, 10002, 3, 10004, 4, 30, 26]


# def main():
#     f = open("./scripts/config_mainnet.json")
#     config_dict = json.load(f)
#     f.close()
    
#     account = accounts.load(config_dict["account"])
#     contract = project.testStrategyData.at(config_dict["data_strat_test"])
    
#     # contract.getStrategiesData(COMPOUND_STRATEGY_CONTRACTS, COMPOUND_STRATEGYY_CHECKDATA, COMPOUND_STRATEGYY_OFFSET,sender=account)
#     data = []
#     offset = 13
#     for i in range(15):
#         result = contract.dataSaved(i + offset)
#         data.append(result)
#     print(data)

# ## Compound V2 : [343166932740490, 239996431375820, 13513136890335, 75000000000000000, 800000000000000000, 23782343987, 518455098934, 0, 2102400, 33500000000000000, 3434114643, 8, 100010524, 8, 6],



## Goerli, with WETH ASSET
BASE_TOKEN = "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
A_BASE_TOKEN = "0xBcca60bB61934080951369a648Fb03DF4F96263C"

AAVE_PROTOCOL_DATA_PROVIDER = "0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d"
AAVE_RESERVE_INTEREST_RATE_STRATEGY= "0x8Cae0596bC1eD42dc3F04c4506cfe442b3E74e27"

AAVE_CONTRACT_ADDRESS_0 = AAVE_PROTOCOL_DATA_PROVIDER
AAVE_CHECKDATA_0 = "0x3e150141000000000000000000000000A0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
AAVE_STRATEGYY_OFFSET_0 = 128
AAVE_CONTRACT_ADDRESS_1 = AAVE_PROTOCOL_DATA_PROVIDER
AAVE_CHECKDATA_1 = "0x35ea6a75000000000000000000000000A0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
AAVE_STRATEGYY_OFFSET_1 = 0 
AAVE_CONTRACT_ADDRESS_2 = AAVE_PROTOCOL_DATA_PROVIDER
AAVE_CHECKDATA_2 = "0x35ea6a75000000000000000000000000A0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
AAVE_STRATEGYY_OFFSET_2 = 32
AAVE_CONTRACT_ADDRESS_3 = AAVE_PROTOCOL_DATA_PROVIDER
AAVE_CHECKDATA_3 = "0x35ea6a75000000000000000000000000A0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
AAVE_STRATEGYY_OFFSET_3 = 64
AAVE_CONTRACT_ADDRESS_4 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_4 = "0xa15f30ac"
AAVE_STRATEGYY_OFFSET_4 = 0
AAVE_CONTRACT_ADDRESS_5 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_5 = "0x0bdf953f"
AAVE_STRATEGYY_OFFSET_5 = 0
AAVE_CONTRACT_ADDRESS_6 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_6 = "0xccab01a3"
AAVE_STRATEGYY_OFFSET_6 = 0
AAVE_CONTRACT_ADDRESS_7 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_7 = "0x7b832f58"
AAVE_STRATEGYY_OFFSET_7 = 0
AAVE_CONTRACT_ADDRESS_8 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_8 = "0x65614f81"
AAVE_STRATEGYY_OFFSET_8 = 0
AAVE_CONTRACT_ADDRESS_9 = AAVE_RESERVE_INTEREST_RATE_STRATEGY
AAVE_CHECKDATA_9 = "0xb2589544"
AAVE_STRATEGYY_OFFSET_9 = 0


AAVE_STRATEGY_CONTRACTS = [AAVE_CONTRACT_ADDRESS_0, AAVE_CONTRACT_ADDRESS_1, AAVE_CONTRACT_ADDRESS_2, AAVE_CONTRACT_ADDRESS_3, AAVE_CONTRACT_ADDRESS_4, AAVE_CONTRACT_ADDRESS_5, AAVE_CONTRACT_ADDRESS_6, AAVE_CONTRACT_ADDRESS_7, AAVE_CONTRACT_ADDRESS_8, AAVE_CONTRACT_ADDRESS_9]
AAVE_STRATEGYY_CHECKDATA = [AAVE_CHECKDATA_0, AAVE_CHECKDATA_1, AAVE_CHECKDATA_2, AAVE_CHECKDATA_3, AAVE_CHECKDATA_4, AAVE_CHECKDATA_5, AAVE_CHECKDATA_6, AAVE_CHECKDATA_7, AAVE_CHECKDATA_8, AAVE_CHECKDATA_9]
AAVE_STRATEGYY_OFFSET = [AAVE_STRATEGYY_OFFSET_0, AAVE_STRATEGYY_OFFSET_1, AAVE_STRATEGYY_OFFSET_2, AAVE_STRATEGYY_OFFSET_3, AAVE_STRATEGYY_OFFSET_4, AAVE_STRATEGYY_OFFSET_5, AAVE_STRATEGYY_OFFSET_6, AAVE_STRATEGYY_OFFSET_7, AAVE_STRATEGYY_OFFSET_8, AAVE_STRATEGYY_OFFSET_9]
AAVE_STRATEGYY_CALCULATION = [1, 0, 5, 10000, 2, 0, 10001, 3, 0, 2, 3, 0, 10003, 1000000000000000000000020000, 2,10004, 10002, 3, 10005, 4, 1, 1000000000000000000000020000, 4, 1, 10006, 1000000000000000000000020000, 2, 10008, 10007, 3, 10009, 6, 2, 10010, 1000000000000000000000020000, 3,
10011, 5, 0, 10012, 9, 0, 2, 1000000000000000000000020000, 2, 10014, 10003, 3, 10012, 10015, 2, 10016, 1000000000000000000000020000, 3, 10009, 8, 2, 10018, 1000000000000000000000020000, 3, 10019, 7, 0, 10020, 9, 0,
3, 1000000000000000000000020000, 2, 10022, 10003, 3, 10021, 10023, 2, 10024, 1000000000000000000000020000, 3, 10017, 10025, 0, 30000, 0, 1, 10026, 10027, 2, 10028, 30000, 3, 10029, 10005, 2, 10030, 1000000000000000000000020000, 3, 
1, 0, 5, 10000, 2, 0, 10001, 3, 0, 2, 3, 0, 10003, 1000000000000000000000020000, 2, 10004, 10002, 3, 10005, 1000000000000000000000020000, 2, 10006, 4, 3, 10007, 5, 2, 10008, 1000000000000000000000020000, 3, 10009, 9, 0, 2, 1000000000000000000000020000, 2,
10011, 10003, 3, 10012, 10010, 2, 10013, 1000000000000000000000020000, 3, 10007, 7, 2, 10015, 1000000000000000000000020000, 3, 10016, 9, 0, 3, 1000000000000000000000020000, 2, 10018, 10003, 3, 10017, 10019, 2, 10020, 1000000000000000000000020000, 3,
10014, 10021, 0, 30000, 0, 1, 10022, 10023, 2, 10024, 30000, 3, 10025, 10005, 2, 10026, 1000000000000000000000020000, 3]
AAVE_CALCULATION_CONDITION = [1, 0, 5, 10000, 2, 0, 10001, 3, 0, 2, 3, 0, 10003, 1000000000000000000000020000, 2, 10004, 10002, 3, 10005, 4, 32, 28]

def main():
    f = open("./scripts/config_mainnet.json")
    config_dict = json.load(f)
    f.close()
    
    account = accounts.load(config_dict["account"])
    contract = project.testStrategyData.at(config_dict["data_strat_test"])
    
    contract.getStrategiesData(AAVE_STRATEGY_CONTRACTS, AAVE_STRATEGYY_CHECKDATA, AAVE_STRATEGYY_OFFSET,sender=account)
    data = []
    offset = 28
    for i in range(10):
        result = contract.dataSaved(i + offset)
        data.append(result)
    print(data)
